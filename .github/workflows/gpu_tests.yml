name: GPU Tests
on:
  workflow_dispatch:
    inputs:
      py-version:
        description: "Python version to test"
        required: true
        default: "3.10"
        type: choice
        options:
          - "{semantic: '3.10', tox: 'py310'}"
          - "{semantic: '3.11', tox: 'py311'}"
          - "{semantic: '3.12', tox: 'py312'}"

  workflow_call:

env:
  COVERAGE_OVERALL_THRESH: 70      # threshold for overall coverage check
  COVERAGE_INDIVIDUAL_THRESH: 45   # threshold for individual coverage check

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  add-gpu-machine:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: true
      matrix:
        py-version: [${{ github.event.inputs.py-version }}]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: Github_Add_Runner
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Execute Lambda function
        run: |
          echo "Requesting GPU runner"

  gputest:
    needs: [add-gpu-machine]
    strategy:
      matrix:
        py-version: [${{ github.event.inputs.py-version }}]
    name: GPU Tests ${{ matrix.py-version.semantic }}
    runs-on: ubunutu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.py-version.semantic }}
      - uses: actions/cache@v4
        with:
          path: .tox/gputest-${{ matrix.py-version.tox }}
          key: gputest-${{ matrix.py-version.tox }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}
      - name: Run GPU tests
        run: |
          pip install tox-uv
          tox -e gputest-${{ matrix.py-version.tox }}
